continue
story_params
continue
next
continue
next
params.merge(user: current_user)
params.merge user: current_user
current_user
params
continue
exit
params
params[:url]
next
step
continue
params[:url] = response.body
params = mixtape_params
mixtape_params
mixtape_params[:html] = response.body
response.code
mixtape_params
next
mixtape_params
next
quit
response.kind_of? Net::HTTPSuccess
response.type == Net::HTTPOK
response == Net::HTTPOK
response == HTTPOK
response
next
continue
mixtape_params[:html]
mixtape_params
continue
next
continue
next
continue
/^http.*mixcloud.com.*\/$/ =~ mixtape_params[:url]
/www.mixcloud.com.*\/$/ =~ mixtape_params[:url]
/www.mixcloud.com.*/$/ =~ mixtape_params[:url]
/www.mixcloud.com/ =~ mixtape_params[:url]
/mixcloud.com/ =~ mixtape_params[:url]
mixtape_params[:url]
MIXCLOUD_URL.match mixtape_params[:url]
MIXCLOUD_URL
next
continue
response.body
response = Net::HTTP.get_response(uri)
uri = URI.parse mixtape_params[:url]
URI.parse mixtape_params[:url]
mixtape_params[:url]
mixtape_params
continue
next
@grid.first.size
@grid.first
@grid
next
quit
continue
@grid.first
next
@grid
next
cell
continue
cell
quit
row
col
quit
continue
@grid.last
next
size
next
size
next
size
continue
size
continue
size
continue
next
size
next
size
continue
@grid
row
col
next
row
next
@grid
next
size
next
photo
next
photos.size
photos.size?
next
@grid
next
row
col
next
photos.first
photos.size
next
photos.last
photos.first
photos.size
next
photos
@grid
quit
Photo.order('created_at desc').to_a
Photo.order('created_at desc').to_A
photos.to_a
photos
continue
@grid
continue
@grid
continue
@grid
continue
@grid
continue
@grid
continue
@grid
continue
next
size
next
size
next
@grid[row].size
@grid
next
@grid[0].size
col
@col
row
@grid
next
size
next
@grid
size
next
quit
@grid[row][col-1]
@grid[row][col]
@grid[row][col-1]
@grid[col]
@grid[col-1]
col
row
next
@grid
next
size
next
col
next
@grid
next
rowspan size
colspan size
size
next
row
col
next
col
@grid
next
@grid[row] || []
@grid[row]
@grid
quit
next
method
next
quit
g[0]
g = Array.new(0) { 5 }
@grid[0]
quit
@grid[0]
quit
next
@grid
quit
exit
exception
next
quit
exit
grid
step
exit
cells
next
cells
next
quit
@grid
cells
(cell_size(row-1,col-1) == :medium)
col
row
next
quit
cell_taken? row, col
col
row
cells
col
size
next
size
next
photos.peek
next
quit
e
next
quit
args
method
next
quit
col
row
cells
next
size
next
cells
next
cells
row
@grid
size
next
